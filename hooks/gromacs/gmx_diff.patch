diff -ruN /gromacs-original/src/gromacs/gmxlib/main.cpp /gromacs-ssages/src/gromacs/gmxlib/main.cpp
--- /gromacs-original/src/gromacs/gmxlib/main.cpp	2016-07-13 08:56:03.000000000 -0400
+++ /gromacs-ssages/src/gromacs/gmxlib/main.cpp	2016-08-08 10:36:37.387130332 -0400
@@ -61,6 +61,8 @@
 #include "gromacs/utility/snprintf.h"
 #include "gromacs/utility/sysinfo.h"
 
+#include "GromacsHook.h"
+
 /* The source code in this file should be thread-safe.
          Please keep it that way. */
 
@@ -340,7 +342,11 @@
     cr->sim_nodeid = cr->nodeid % nnodpersim;
     cr->nnodes     = nnodpersim;
 #ifdef GMX_MPI
-    MPI_Comm_split(MPI_COMM_WORLD, sim, cr->sim_nodeid, &cr->mpi_comm_mysim);
+    // Get SSAGES communicator and assign.
+    auto& ssages = SSAGES::GromacsHook::Instance();
+    auto comm = ssages.GetCommunicator();
+    cr->mpi_comm_mysim = comm;
+    //MPI_Comm_split(MPI_COMM_WORLD, sim, cr->sim_nodeid, &cr->mpi_comm_mysim);
     cr->mpi_comm_mygroup = cr->mpi_comm_mysim;
     cr->nodeid           = cr->sim_nodeid;
 #endif
diff -ruN /gromacs-original/src/programs/CMakeLists.txt /gromacs-ssages/src/programs/CMakeLists.txt
--- /gromacs-original/src/programs/CMakeLists.txt	2016-07-13 08:56:04.000000000 -0400
+++ /gromacs-ssages/src/programs/CMakeLists.txt	2016-08-07 17:36:27.061402248 -0400
@@ -35,6 +35,12 @@
 file(GLOB MDRUN_SOURCES mdrun/*.c mdrun/*.cpp)
 # make an "object library" that we can re-use for multiple targets
 add_library(mdrun_objlib OBJECT ${MDRUN_SOURCES})
+add_library(mdrun STATIC $<TARGET_OBJECTS:mdrun_objlib>)
+install(TARGETS mdrun
+        EXPORT mdrun
+        LIBRARY DESTINATION ${LIB_INSTALL_DIR}
+        ARCHIVE DESTINATION ${LIB_INSTALL_DIR}
+        COMPONENT libraries)
 
 if(GMX_FAHCORE)
     # The lack of a real source file here alongside the object library
diff -ruN /gromacs-original/src/programs/mdrun/md.cpp /gromacs-ssages/src/programs/mdrun/md.cpp
--- /gromacs-original/src/programs/mdrun/md.cpp	2016-07-13 08:56:04.000000000 -0400
+++ /gromacs-ssages/src/programs/mdrun/md.cpp	2016-08-17 13:06:42.523929146 -0400
@@ -111,6 +111,7 @@
 #include "gromacs/utility/fatalerror.h"
 #include "gromacs/utility/real.h"
 #include "gromacs/utility/smalloc.h"
+#include "GromacsHook.h"
 
 #include "deform.h"
 #include "membed.h"
@@ -647,6 +648,44 @@
         fprintf(fplog, "\n");
     }
 
+    // Setup SSAGES singleton and lambdas.
+    auto& ssages = SSAGES::GromacsHook::Instance();
+    ssages.SetPeriodicBoundaryConditions(ir->ePBC);
+    ssages.SetGMXPush([&](){
+        // Begin SSAGES.
+        auto natoms = top_global->natoms;
+        int* ids = nullptr;
+        if(PAR(cr) && DOMAINDECOMP(cr))
+        {
+            natoms = cr->dd->nat_home;
+            ids = cr->dd->gatindex;
+        }
+        ssages.PushToGromacs(natoms, ids, mdatoms->typeA, mdatoms->massT, state->x, state->v, f);
+    });
+    ssages.SetGMXPull([&](){
+        // Begin SSAGES.
+        auto natoms = top_global->natoms;
+        int* ids = nullptr;
+        if(PAR(cr) && DOMAINDECOMP(cr))
+        {
+            natoms = cr->dd->nat_home;
+            ids = cr->dd->gatindex;
+        }
+        ssages.PullToSSAGES(
+            step, 
+            natoms, 
+            ids, 
+            mdatoms->typeA, 
+            mdatoms->massT, 
+            state->x, 
+            state->v, 
+            f,
+            state->box,
+            enerd->term[F_TEMP], 
+            enerd->term[F_EPOT], 
+            BOLTZ);
+    });
+
     walltime_accounting_start(walltime_accounting);
     wallcycle_start(wcycle, ewcRUN);
     print_start(fplog, cr, walltime_accounting, "mdrun");
@@ -741,6 +780,9 @@
         gmx_fatal(FARGS, "The combination of mdrun -maxh and mdrun -multi is not supported. Please use the nsteps .mdp field.");
     }
 
+    ssages.SyncToSSAGES();
+    ssages.PreSimulationHook();
+
     /* and stop now if we should */
     bLastStep = (bRerunMD || (ir->nsteps >= 0 && step_rel > ir->nsteps) ||
                  ((multisim_nsteps >= 0) && (step_rel >= multisim_nsteps )));
@@ -1086,6 +1128,9 @@
                      state->lambda, graph,
                      fr, vsite, mu_tot, t, mdoutf_get_fp_field(outf), ed, bBornRadii,
                      (bNS ? GMX_FORCE_NS : 0) | force_flags);
+
+            ssages.SyncToSSAGES();
+            ssages.PostIntegrationHook();
         }
 
         if (bVV && !bStartingFromCpt && !bRerunMD)
@@ -1787,10 +1832,14 @@
         /* If bIMD is TRUE, the master updates the IMD energy record and sends positions to VMD client */
         IMD_prep_energies_send_positions(ir->bIMD && MASTER(cr), bIMDstep, ir->imd, enerd, step, bCalcEner, wcycle);
 
+        ssages.PostStepHook();
     }
     /* End of main MD loop */
     debug_gmx();
 
+    ssages.SyncToSSAGES();
+    ssages.PostSimulationHook();
+
     /* Closing TNG files can include compressing data. Therefore it is good to do that
      * before stopping the time measurements. */
     mdoutf_tng_close(outf);
diff -ruN /gromacs-original/src/programs/mdrun/mdrun.cpp /gromacs-ssages/src/programs/mdrun/mdrun.cpp
--- /gromacs-original/src/programs/mdrun/mdrun.cpp	2016-07-13 08:56:04.000000000 -0400
+++ /gromacs-ssages/src/programs/mdrun/mdrun.cpp	2016-08-17 11:46:00.603765288 -0400
@@ -71,6 +71,8 @@
 
 #include "mdrun_main.h"
 
+#include "GromacsHook.h"
+
 /*! \brief Return whether either of the command-line parameters that
  *  will trigger a multi-simulation is set */
 static bool is_multisim_option_set(int argc, const char *const argv[])
@@ -535,6 +537,10 @@
     ddxyz[YY] = (int)(realddxyz[YY] + 0.5);
     ddxyz[ZZ] = (int)(realddxyz[ZZ] + 0.5);
 
+    // SSAGES overrides.
+    auto& ssages = SSAGES::GromacsHook::Instance();
+    nsteps = ssages.GetIterationTarget();
+
     rc = mdrunner(&hw_opt, fplog, cr, NFILE, fnm, oenv, bVerbose, bCompact,
                   nstglobalcomm, ddxyz, dd_node_order, rdd, rconstr,
                   dddlb_opt[0], dlb_scale, ddcsx, ddcsy, ddcsz,

